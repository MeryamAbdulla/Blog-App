{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\blog-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter from './routers/AppRouter';\nimport \"./App.css\";\nimport configureStore from './store/configureStore';\nimport { addBlog, removeBlog, editBlog } from './actions/blogs';\nimport './firebase/firebaseConfig';\nconst store = configureStore();\nstore.subscribe(() => {// console.log(store.getState());\n});\nconst blog1 = store.dispatch(addBlog({\n  title: 'blog title 1',\n  description: 'blog description 1'\n}));\nconst blog2 = store.dispatch(addBlog({\n  title: 'blog title 2',\n  description: 'blog description 2',\n  dateAdded: Date.now()\n}));\nstore.dispatch(addBlog({\n  title: 'blog title 3',\n  description: 'blog description 3',\n  dateAdded: Date.now()\n}));\nstore.dispatch(addBlog({\n  title: 'blog title 4',\n  description: 'blog description 4',\n  dateAdded: Date.now()\n}));\nstore.dispatch(addBlog({\n  title: 'blog title 5',\n  description: 'blog description 5',\n  dateAdded: Date.now()\n}));\nstore.dispatch(removeBlog({\n  id: blog1.blog.id\n}));\nstore.dispatch(editBlog(blog2.blog.id, {\n  title: 'updated blog title',\n  description: 'updated blog description'\n}));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(AppRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 41\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/Hp/OneDrive/Desktop/blog-app/src/index.js"],"names":["React","ReactDOM","Provider","serviceWorker","AppRouter","configureStore","addBlog","removeBlog","editBlog","store","subscribe","blog1","dispatch","title","description","blog2","dateAdded","Date","now","id","blog","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,OAAT,EAAiBC,UAAjB,EAA4BC,QAA5B,QAA6C,iBAA7C;AACA,OAAO,2BAAP;AAEA,MAAMC,KAAK,GAAGJ,cAAc,EAA5B;AAEAI,KAAK,CAACC,SAAN,CAAgB,MAAK,CACjB;AACH,CAFD;AAIA,MAAMC,KAAK,GAAGF,KAAK,CAACG,QAAN,CAAeN,OAAO,CAAC;AAACO,EAAAA,KAAK,EAAE,cAAR;AAAwBC,EAAAA,WAAW,EAAE;AAArC,CAAD,CAAtB,CAAd;AACA,MAAMC,KAAK,GAAGN,KAAK,CAACG,QAAN,CAAeN,OAAO,CAAC;AAACO,EAAAA,KAAK,EAAE,cAAR;AAAwBC,EAAAA,WAAW,EAAE,oBAArC;AAA2DE,EAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAAtE,CAAD,CAAtB,CAAd;AACAT,KAAK,CAACG,QAAN,CAAeN,OAAO,CAAC;AAACO,EAAAA,KAAK,EAAE,cAAR;AAAwBC,EAAAA,WAAW,EAAE,oBAArC;AAA2DE,EAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAAtE,CAAD,CAAtB;AACAT,KAAK,CAACG,QAAN,CAAeN,OAAO,CAAC;AAACO,EAAAA,KAAK,EAAE,cAAR;AAAwBC,EAAAA,WAAW,EAAE,oBAArC;AAA2DE,EAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAAtE,CAAD,CAAtB;AACAT,KAAK,CAACG,QAAN,CAAeN,OAAO,CAAC;AAACO,EAAAA,KAAK,EAAE,cAAR;AAAwBC,EAAAA,WAAW,EAAE,oBAArC;AAA2DE,EAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAAtE,CAAD,CAAtB;AAEAT,KAAK,CAACG,QAAN,CAAeL,UAAU,CAAC;AAACY,EAAAA,EAAE,EAAER,KAAK,CAACS,IAAN,CAAWD;AAAhB,CAAD,CAAzB;AACAV,KAAK,CAACG,QAAN,CAAeJ,QAAQ,CAACO,KAAK,CAACK,IAAN,CAAWD,EAAZ,EAAgB;AAAEN,EAAAA,KAAK,EAAE,oBAAT;AAA+BC,EAAAA,WAAW,EAAE;AAA5C,CAAhB,CAAvB;AAEAb,QAAQ,CAACoB,MAAT,eAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CAAhB,EAAkEa,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlE,E,CAEA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter from './routers/AppRouter';\nimport \"./App.css\"\nimport configureStore from './store/configureStore';\nimport { addBlog,removeBlog,editBlog  } from './actions/blogs'\nimport './firebase/firebaseConfig'\n\nconst store = configureStore();\n\nstore.subscribe(()=> {\n    // console.log(store.getState());\n}) \n\nconst blog1 = store.dispatch(addBlog({title: 'blog title 1', description: 'blog description 1'}))\nconst blog2 = store.dispatch(addBlog({title: 'blog title 2', description: 'blog description 2', dateAdded: Date.now()}))\nstore.dispatch(addBlog({title: 'blog title 3', description: 'blog description 3', dateAdded: Date.now()}))\nstore.dispatch(addBlog({title: 'blog title 4', description: 'blog description 4', dateAdded: Date.now()}))\nstore.dispatch(addBlog({title: 'blog title 5', description: 'blog description 5', dateAdded: Date.now()}))\n\nstore.dispatch(removeBlog({id: blog1.blog.id}))\nstore.dispatch(editBlog(blog2.blog.id, { title: 'updated blog title', description: 'updated blog description' }))\n\nReactDOM.render(<Provider store={store}><AppRouter /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}