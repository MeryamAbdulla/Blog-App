{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\blog-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter, { history } from './routers/AppRouter';\nimport \"./App.css\";\nimport configureStore from './store/configureStore';\nimport { clearBlogs, getBlogsFromDatabase } from './actions/blogs';\nimport { firebase } from './firebase/firebaseConfig';\nimport { loginAction, logoutAction } from './actions/auth';\nconst store = configureStore();\nconst result = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(AppRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}));\nReactDOM.render( /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }\n}, \"Loading...\"), document.getElementById('root'));\nlet isRendered = false;\n\nconst renderApp = () => {\n  if (!isRendered) {\n    ReactDOM.render(result, document.getElementById('root'));\n    isRendered = true;\n  }\n};\n\nfirebase.auth().onAuthStateChanged(function (user) {\n  if (user) {\n    store.dispatch(loginAction(user.uid));\n    store.dispatch(getBlogsFromDatabase()).then(() => {\n      renderApp();\n\n      if (history.location.pathname === '/') {\n        history.push('/blogs');\n      }\n    });\n  } else {\n    store.dispatch(logoutAction());\n    store.dispatch(clearBlogs());\n    renderApp();\n    console.log(\"kullanici cikis yapmis.\");\n    history.push('/');\n  }\n}); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/Hp/OneDrive/Desktop/blog-app/src/index.js"],"names":["React","ReactDOM","Provider","serviceWorker","AppRouter","history","configureStore","clearBlogs","getBlogsFromDatabase","firebase","loginAction","logoutAction","store","result","render","document","getElementById","isRendered","renderApp","auth","onAuthStateChanged","user","dispatch","uid","then","location","pathname","push","console","log","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,SAAP,IAAmBC,OAAnB,QAAiC,qBAAjC;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,UAAT,EAAqBC,oBAArB,QAAiD,iBAAjD;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,SAAQC,WAAR,EAAqBC,YAArB,QAAwC,gBAAxC;AAEA,MAAMC,KAAK,GAAGN,cAAc,EAA5B;AAEA,MAAMO,MAAM,gBACR,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ;AAMAX,QAAQ,CAACa,MAAT,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhB,EAAmCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnC;AAEA,IAAIC,UAAU,GAAG,KAAjB;;AACA,MAAMC,SAAS,GAAG,MAAM;AACpB,MAAG,CAACD,UAAJ,EAAgB;AACZhB,IAAAA,QAAQ,CAACa,MAAT,CAAiBD,MAAjB,EAAyBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACAC,IAAAA,UAAU,GAAG,IAAb;AACH;AACJ,CALD;;AAQAR,QAAQ,CAACU,IAAT,GAAgBC,kBAAhB,CAAmC,UAASC,IAAT,EAAe;AAC9C,MAAIA,IAAJ,EAAU;AACNT,IAAAA,KAAK,CAACU,QAAN,CAAeZ,WAAW,CAACW,IAAI,CAACE,GAAN,CAA1B;AACAX,IAAAA,KAAK,CAACU,QAAN,CAAed,oBAAoB,EAAnC,EAAuCgB,IAAvC,CAA4C,MAAM;AAC9CN,MAAAA,SAAS;;AACT,UAAGb,OAAO,CAACoB,QAAR,CAAiBC,QAAjB,KAA8B,GAAjC,EAAsC;AAClCrB,QAAAA,OAAO,CAACsB,IAAR,CAAa,QAAb;AACH;AACJ,KALD;AAOH,GATD,MASO;AACHf,IAAAA,KAAK,CAACU,QAAN,CAAeX,YAAY,EAA3B;AACAC,IAAAA,KAAK,CAACU,QAAN,CAAef,UAAU,EAAzB;AACAW,IAAAA,SAAS;AACTU,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAxB,IAAAA,OAAO,CAACsB,IAAR,CAAa,GAAb;AACH;AACJ,CAjBD,E,CAmBA;AACA;AACA;;AACAxB,aAAa,CAAC2B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter, {history} from './routers/AppRouter';\nimport \"./App.css\"\nimport configureStore from './store/configureStore';\nimport { clearBlogs, getBlogsFromDatabase } from './actions/blogs'\nimport {firebase} from './firebase/firebaseConfig'\nimport {loginAction, logoutAction} from './actions/auth'\n\nconst store = configureStore();\n\nconst result = (\n    <Provider store={store}>\n        <AppRouter />\n    </Provider>\n)\n\nReactDOM.render(<p>Loading...</p>, document.getElementById('root'));\n\nlet isRendered = false;\nconst renderApp = () => {\n    if(!isRendered) {\n        ReactDOM.render( result, document.getElementById('root'));\n        isRendered = true;\n    }\n}\n\n\nfirebase.auth().onAuthStateChanged(function(user) {\n    if (user) {\n        store.dispatch(loginAction(user.uid));\n        store.dispatch(getBlogsFromDatabase()).then(() => {\n            renderApp();\n            if(history.location.pathname === '/') {\n                history.push('/blogs');\n            }\n        })\n        \n    } else {\n        store.dispatch(logoutAction());\n        store.dispatch(clearBlogs());\n        renderApp();\n        console.log(\"kullanici cikis yapmis.\");\n        history.push('/')\n    }\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}