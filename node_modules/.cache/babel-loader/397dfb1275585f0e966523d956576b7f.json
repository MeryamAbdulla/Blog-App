{"ast":null,"code":"import database from '../firebase/firebaseConfig';\nexport const addBlog = blog => ({\n  type: \"ADD_BLOG\",\n  blog\n});\nexport const addBlogToDatabase = (blogData = {}) => {\n  return dispatch => {\n    const {\n      title = '',\n      description = '',\n      dateAdded = 0\n    } = blogData;\n    const blog = {\n      title,\n      description,\n      dateAdded\n    };\n    database.ref(\"blogs\").push(blog).then(res => {\n      dispatch(addBlog({\n        id: res.key,\n        ...blog\n      }));\n    });\n  };\n};\nexport const removeBlog = id => ({\n  type: \"REMOVE_BLOG\",\n  id: id\n});\nexport const removeBlogFromDatabase = id => {\n  return dispatch => {\n    return database.ref(`blogs/${id}`).remove().then(() => {\n      dispatch(removeBlog(id));\n    });\n  };\n};\nexport const editBlog = (id, updates) => ({\n  type: \"EDIT_BLOG\",\n  id,\n  updates\n});\nexport const editBlogFromDatabase = (id, updates) => {\n  return dispatch => {\n    return database.ref(`blogs/${id}`).update(updates).then(() => {\n      dispatch(editBlog(id, updates));\n    });\n  };\n};\nexport const setBlogs = blogs => ({\n  type: \"SET_BLOGS\",\n  blogs\n});\nexport const getBlogsFromDatabase = () => {\n  return dispatch => {\n    return database.ref(\"blogs\").once(\"value\").then(snapshot => {\n      const blogs = [];\n      snapshot.forEach(blog => {\n        blogs.push({\n          id: blog.key,\n          ...blog.val()\n        });\n      });\n      dispatch(setBlogs(blogs));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Hp/OneDrive/Desktop/blog-app/src/actions/blogs.js"],"names":["database","addBlog","blog","type","addBlogToDatabase","blogData","dispatch","title","description","dateAdded","ref","push","then","res","id","key","removeBlog","removeBlogFromDatabase","remove","editBlog","updates","editBlogFromDatabase","update","setBlogs","blogs","getBlogsFromDatabase","once","snapshot","forEach","val"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,4BAArB;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAC9BC,EAAAA,IAAI,EAAE,UADwB;AAE9BD,EAAAA;AAF8B,CAAX,CAAhB;AAKP,OAAO,MAAME,iBAAiB,GAAG,CAACC,QAAQ,GAAG,EAAZ,KAAmB;AAChD,SAAQC,QAAD,IAAc;AACjB,UAAM;AAAEC,MAAAA,KAAK,GAAC,EAAR;AAAYC,MAAAA,WAAW,GAAC,EAAxB;AAA2BC,MAAAA,SAAS,GAAC;AAArC,QAA2CJ,QAAjD;AACA,UAAMH,IAAI,GAAG;AAACK,MAAAA,KAAD;AAAOC,MAAAA,WAAP;AAAmBC,MAAAA;AAAnB,KAAb;AAEAT,IAAAA,QAAQ,CAACU,GAAT,CAAa,OAAb,EAAsBC,IAAtB,CAA2BT,IAA3B,EAAiCU,IAAjC,CAAuCC,GAAD,IAAS;AAC3CP,MAAAA,QAAQ,CAACL,OAAO,CAAC;AACba,QAAAA,EAAE,EAAED,GAAG,CAACE,GADK;AAEb,WAAGb;AAFU,OAAD,CAAR,CAAR;AAIH,KALD;AAMH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMc,UAAU,GAAIF,EAAD,KACtB;AACIX,EAAAA,IAAI,EAAE,aADV;AAEIW,EAAAA,EAAE,EAAEA;AAFR,CADsB,CAAnB;AAOP,OAAO,MAAMG,sBAAsB,GAAIH,EAAD,IAAQ;AAC1C,SAAQR,QAAD,IAAc;AACjB,WAAON,QAAQ,CAACU,GAAT,CAAc,SAAQI,EAAG,EAAzB,EAA4BI,MAA5B,GAAqCN,IAArC,CAA0C,MAAM;AACnDN,MAAAA,QAAQ,CAACU,UAAU,CAACF,EAAD,CAAX,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMK,QAAQ,GAAG,CAACL,EAAD,EAAIM,OAAJ,MAAiB;AACrCjB,EAAAA,IAAI,EAAE,WAD+B;AAErCW,EAAAA,EAFqC;AAGrCM,EAAAA;AAHqC,CAAjB,CAAjB;AAMP,OAAO,MAAMC,oBAAoB,GAAG,CAACP,EAAD,EAAIM,OAAJ,KAAgB;AAChD,SAAQd,QAAD,IAAc;AACjB,WAAON,QAAQ,CAACU,GAAT,CAAc,SAAQI,EAAG,EAAzB,EAA4BQ,MAA5B,CAAmCF,OAAnC,EAA4CR,IAA5C,CAAiD,MAAM;AAC1DN,MAAAA,QAAQ,CAACa,QAAQ,CAACL,EAAD,EAAIM,OAAJ,CAAT,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,KAAY;AAChCrB,EAAAA,IAAI,EAAE,WAD0B;AAEhCqB,EAAAA;AAFgC,CAAZ,CAAjB;AAKP,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtC,SAAQnB,QAAD,IAAc;AACjB,WAAQN,QAAQ,CAACU,GAAT,CAAa,OAAb,EAAsBgB,IAAtB,CAA2B,OAA3B,EAAoCd,IAApC,CAA0Ce,QAAD,IAAc;AAC3D,YAAMH,KAAK,GAAG,EAAd;AAEAG,MAAAA,QAAQ,CAACC,OAAT,CAAkB1B,IAAD,IAAS;AACtBsB,QAAAA,KAAK,CAACb,IAAN,CAAW;AACPG,UAAAA,EAAE,EAAEZ,IAAI,CAACa,GADF;AAEP,aAAGb,IAAI,CAAC2B,GAAL;AAFI,SAAX;AAIH,OALD;AAOAvB,MAAAA,QAAQ,CAACiB,QAAQ,CAACC,KAAD,CAAT,CAAR;AACH,KAXO,CAAR;AAYH,GAbD;AAcH,CAfM","sourcesContent":["import database from '../firebase/firebaseConfig';\n\nexport const addBlog = (blog) => ({\n    type: \"ADD_BLOG\",\n    blog\n})\n\nexport const addBlogToDatabase = (blogData = {}) => {\n    return (dispatch) => {\n        const { title='', description='',dateAdded=0 } = blogData;\n        const blog = {title,description,dateAdded};\n\n        database.ref(\"blogs\").push(blog).then((res) => {\n            dispatch(addBlog({\n                id: res.key,\n                ...blog\n            }))\n        })\n    }\n}\n\nexport const removeBlog = (id) => (\n    {\n        type: \"REMOVE_BLOG\",\n        id: id\n    }\n)\n\nexport const removeBlogFromDatabase = (id) => {\n    return (dispatch) => {\n        return database.ref(`blogs/${id}`).remove().then(() => {\n            dispatch(removeBlog(id));\n        })\n    }\n}\n\nexport const editBlog = (id,updates) => ({\n    type: \"EDIT_BLOG\",\n    id,\n    updates\n})\n\nexport const editBlogFromDatabase = (id,updates) => {\n    return (dispatch) => {\n        return database.ref(`blogs/${id}`).update(updates).then(() => {\n            dispatch(editBlog(id,updates));\n        })\n    }\n}\n\nexport const setBlogs = (blogs) => ({\n    type: \"SET_BLOGS\",\n    blogs \n})\n\nexport const getBlogsFromDatabase = () => {\n    return (dispatch) => {\n        return  database.ref(\"blogs\").once(\"value\").then((snapshot) => {\n            const blogs = [];\n\n            snapshot.forEach((blog) =>{\n                blogs.push({\n                    id: blog.key,\n                    ...blog.val()\n                })\n            })\n\n            dispatch(setBlogs(blogs));\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}